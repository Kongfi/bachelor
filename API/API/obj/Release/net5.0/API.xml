<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.Domain.Exceptions.BusinessRuleException">
            <summary>
            To be thrown when business logic fails.
            This exception type is caught by the global filter and formatted before sending responses to the client.
            </summary>
        </member>
        <member name="T:API.Domain.Exceptions.ConflictException">
            <summary>
            To be thrown when business logic fails due to a conflict.
            This exception type is caught by the global filter and formatted before sending responses to the client.
            </summary>
        </member>
        <member name="T:API.Domain.Exceptions.ErrorCodes">
            <summary>
            Error messages to use when business rules are broken.
            These should be encapsulated in an exception - for instance the BusinessRuleException.
            </summary>
        </member>
        <member name="F:API.Domain.Exceptions.ErrorCodes.errorRoot">
            <summary></summary>
        </member>
        <member name="T:API.Domain.Exceptions.NotFoundException">
            <summary>
            To be thrown when business logic fails due to a conflict.
            This exception type is caught by the global filter and formatted before sending responses to the client.
            </summary>
        </member>
        <member name="T:API.Models.ApiErrorResponse">
            <summary>
            The typical error type that will be sent to the client when an error happens in the API
            </summary>
        </member>
        <member name="P:API.Models.ApiErrorResponse.ValidationErrors">
            <summary>
            will contain validation errors if any
            </summary>
        </member>
    </members>
</doc>
